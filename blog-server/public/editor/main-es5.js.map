{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/blog.service.ts","webpack:///src/app/edit/edit.component.ts","webpack:///src/app/edit/edit.component.html","webpack:///src/app/list/list.component.ts","webpack:///src/app/list/list.component.html","webpack:///src/app/preview/preview.component.ts","webpack:///src/app/preview/preview.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","AppRoutingModule","forRoot","useHash","imports","AppComponent","title","selector","templateUrl","styleUrls","providers","AppModule","declarations","bootstrap","Post","post","postid","created","Date","modified","body","BlogService","http","apiRoot","_draft","_postList","postList$","asObservable","draft$","posts","notify","getAllPosts","apiURL","getUsername","get","pipe","err","subscribe","res","forEach","element","push","console","error","find","getNextId","status","log","splice","length","put","oldItem","getPost","index","indexOf","next","token","base64Url","split","base64","replace","JSON","parse","atob","name","cookie","document","parts","parseJWT","getEncoded","usr","nextId","EditComponent","blogService","route","router","paramMap","snapshot","getCurrentDraft","draft","userForm","valueChanges","data","setCurrentDraft","deletePost","navigate","updatePost","markAsPristine","ListComponent","fetchPosts","selectedPost","newPost","sort","a","b","newpost","PreviewComponent","writer","reader","render","edit","environment","production","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { EditComponent } from './edit/edit.component';\nimport { PreviewComponent } from './preview/preview.component';\n\n\nconst routes: Routes = [\n  {path: 'edit/:id', component: EditComponent},\n  {path: 'preview/:id', component: PreviewComponent}];\n\n@NgModule({\n  // ensures that the app routing path is encoded as URL fragment identifier behind a hash symbol.\n  imports: [RouterModule.forRoot(routes, {useHash: true})],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { BlogService } from './blog.service'\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n  providers: [BlogService]\n})\nexport class AppComponent {\n  title = 'angular-blog';\n}\n","<div class=\"page-container\">\n  <div><h1 class=\"text-center\">Welcome to {{ title }}</h1></div>\n  <div class=\"row main-container\">\n    <div class=\"col1\"><app-list></app-list></div>\n    <!-- <div class=\"col-md-2 col\"></div> -->\n    <div class=\"col2\"><router-outlet></router-outlet></div>\n  </div>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ListComponent } from './list/list.component';\nimport { BlogService } from './blog.service';\nimport { HttpClientModule } from '@angular/common/http';\nimport { EditComponent } from './edit/edit.component';\nimport { PreviewComponent } from './preview/preview.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ListComponent,\n    EditComponent,\n    PreviewComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  providers: [BlogService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// Reference: https://stackoverflow.com/questions/48041597/angular-4-updating-view-on-array-push\nimport { Injectable } from '@angular/core';\nimport { Subject, Observable, throwError } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport { HttpClient } from '@angular/common/http';\n\nexport class Post {\n  postid: number;\n  created: Date;\n  modified: Date;\n  title: string;\n  body: string;\n\n  constructor(post:Post) {\n    this.postid = post && post.postid || 0;\n    this.created = post && new Date(post.created) || new Date();  // Date(value/Date)\n    this.modified = post && new Date(post.modified) || new Date();\n    this.title = post && post.title || '';\n    this.body = post && post.body || '';\n  }\n}\n\n@Injectable()\nexport class BlogService {\n  private apiRoot = '/api';\n  private posts : Post[];\n  private draft : Post;\n  // shared data\n  private _draft = new Subject<Post>();\n  private _postList = new Subject<Post[]>();\n  postList$ = this._postList.asObservable();\n  draft$ = this._draft.asObservable();\n\n  constructor(private http: HttpClient) {\n    this.posts = [];\n    this.notify();\n  }\n\n  fetchPosts(): Observable<Post[]> {\n    this.getAllPosts();\n    return this.postList$;\n  }\n\n  getAllPosts(): void {\n    this.posts = [];\n    // Here, get our data from the API.\n    let apiURL = `${this.apiRoot}/${this.getUsername()}`;\n    this.http.get<Post[]>(apiURL).pipe(\n      catchError(err => {\n        return throwError(err);\n    })).subscribe(\n      res => {\n      // We update data with what comes back, and call notify again\n      // so that the observable emits the latest data\n      res.forEach(element => {\n        this.posts.push(new Post(element));\n      });\n      this.notify();\n    },\n      err => {\n        console.error(err);\n      }\n    );\n  }\n\n  getPost(postid:number): Post {\n    return this.posts.find(post => {\n      if (post.postid == postid) {\n        return post;\n      }\n  });\n  }\n\n  newPost(): void {\n    // Here we are updating the API\n    let id = this.getNextId();\n    let apiURL = `${this.apiRoot}/${this.getUsername()}/${id}`\n    let post: Post = { 'postid': id, 'created': new Date(), 'modified': new Date(), 'title': '', 'body': '' };\n    this.http.post<Post>(apiURL,\n      {title:'', body:''}).subscribe(\n        res => {\n        // The API returns our newly created item, so append it to data, and\n        // call notify again to update the observable\n        this.posts.push(res);\n        this.notify();\n      },\n      err => {\n        if (err.status == 201){\n          console.log();\n        } else {\n          console.error(err);\n          this.posts.splice(this.posts.length - 1, 1);\n        }\n        // this.notify();\n      }\n    )\n\n  }\n\n  updatePost(post:Post):void {\n    let apiURL = `${this.apiRoot}/${this.getUsername()}/${post.postid}`;\n    this.http.put<Post>(apiURL,\n      {title: post.title, body: post.body}\n    ).subscribe(\n      res => {\n        // update the old item and replace\n        let oldItem = this.getPost(post.postid);\n        if (oldItem) {\n          let index = this.posts.indexOf(oldItem);\n          this.posts[index].title = post.title;\n          this.posts[index].body = post.body;\n          this.posts[index].modified = new Date();\n        }\n        // update observable\n        this.notify();\n      },\n      err => {\n        if (err.status == 200){\n          console.log();\n        } else {\n          console.error(err);\n        }\n        this.notify();\n      }\n    );\n  }\n\n  deletePost(postid:number):void {\n    let apiURL = `${this.apiRoot}/${this.getUsername()}/${postid}`;\n    this.http.delete<Post>(apiURL).subscribe(\n      res => {\n        // remove item from posts\n        let oldItem = this.getPost(postid);\n        if (oldItem){\n          let index = this.posts.indexOf(oldItem);\n          this.posts.splice(index, 1);\n        }\n      },\n      err => {\n        if (err.status == 204){\n          console.log();\n        } else {\n          console.error(err);\n        }\n      }\n    );\n    // update observable\n    this.notify();\n  }\n\n  // publish the change to all subscribers\n  setCurrentDraft(post: Post): void {\n    this._draft.next(post);\n  }\n\n  // returns the draft saved in the earlier setCurrentDraft() call\n  getCurrentDraft(): Observable<Post> {\n    return this.draft$;\n  }\n\n  private notify() {\n    // Call next on the subject with the latest data\n    this._postList.next(this.posts);\n  }\n\n  /*------- Helper functions for fetching verfied username from jwt------- */\n  // parse the encoded sequence\n  parseJWT(token) {\n    let base64Url = token.split('.')[1];\n    let base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n    return JSON.parse(atob(base64));\n  }\n\n  // get the encoded sequence from cookie \"jwt=<encoded>\"\n  getEncoded(name:string) {\n    let cookie = document.cookie;\n    let parts = cookie.split(name + \"=\");\n    if (parts.length == 2)\n      return parts[1];\n  }\n\n  getUsername() {\n    return this.parseJWT(this.getEncoded('jwt')).usr;\n  }\n\n  getNextId() : number {\n   let nextId = this.posts[this.posts.length -1].postid + 1;\n   return nextId;\n  }\n\n}\n\n","import { Component, OnInit } from '@angular/core';\nimport { Post, BlogService } from '../blog.service'\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { FormControl, FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'app-edit',\n  templateUrl: './edit.component.html',\n  styleUrls: ['./edit.component.css']\n})\nexport class EditComponent implements OnInit {\n  post : Post; // hold the copy of current editing post\n  userForm : FormGroup;\n  modified : Date;\n  constructor(private blogService : BlogService,\n    private route : ActivatedRoute,\n    private router : Router){\n  }\n\n  ngOnInit(): void {\n    this.route.paramMap.subscribe(() => this.getPost());\n  }\n\n  getPost():void {\n    const id = +this.route.snapshot.paramMap.get('id');\n    if (this.blogService.getCurrentDraft()) {\n      this.blogService.getCurrentDraft().subscribe(draft => {\n        console.log(draft);\n        if (draft != null) {\n          this.post = draft;\n        }\n      });\n    }\n    if (this.post == null || this.post.postid !== id) {\n      this.post = this.blogService.getPost(id);\n    }\n    if (this.post) {\n      console.log(this.post);\n      this.modified = this.post.modified;\n      this.userForm = new FormGroup({\n        title: new FormControl(this.post.title),\n        body: new FormControl(this.post.body)\n      })\n      this.userForm.valueChanges.subscribe(data => {\n        this.post.title = data.title;\n        this.post.body = data.body;\n        this.blogService.setCurrentDraft(this.post);\n      });\n    }\n  }\n\n  delete(){\n    this.blogService.deletePost(this.post.postid);\n    this.router.navigate(['']);\n  }\n\n  save(){\n    this.blogService.updatePost(this.post);\n    this.modified = new Date();\n    this.userForm.markAsPristine();\n  }\n\n  preview(){\n    this.blogService.setCurrentDraft(this.post);\n    this.router.navigate(['/preview', this.post.postid]);\n  }\n\n}\n","<div class=\"box\" *ngIf=\"post\">\n  <form class=\"edit-form\" *ngIf=\"userForm\" [formGroup]=\"userForm\" #formDir=\"ngForm\">\n    <div class=\"form-group\">\n      <div>\n        <label for=\"title\" class=\"label-text\" >Title:</label>\n        <input class=\"form-control\" name=\"title\" id=\"title\" formControlName=\"title\" placeholder=\"give it a good title...\"/>\n      </div>\n      <div>\n        <label for=\"body\" class=\"label-text\">Body:</label>\n        <textarea class=\"form-control\" name=\"body\" id=\"body\" formControlName=\"body\"  placeholder=\"write something here...\"></textarea>\n      </div>\n      <div>\n        <span>Last Modified:\n          {{ modified.toDateString() }},\n          {{ modified.toLocaleTimeString()}}\n        </span>\n      </div>\n      <div class=\"btn-group\">\n        <button type=\"button\" class=\"btn del\" (click)=\"delete()\" [routerLink]=\"['/']\" >Delete</button>\n        <button type=\"button\" class=\"btn save\" (click)=\"save()\" [disabled]=\"this.userForm.pristine\">Save</button>\n        <button type=\"button\" class=\"btn prev\" (click)=\"preview()\">Preview</button>\n      </div>\n    </div>\n  </form>\n  </div>\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Post, BlogService } from '../blog.service';\n\n@Component({\n  selector: 'app-list',\n  templateUrl: './list.component.html',\n  styleUrls: ['./list.component.css']\n})\nexport class ListComponent implements OnInit {\n  posts : Post[];\n  selectedPost : Post; // just for selected post highlight in css\n  constructor(private blogService : BlogService,\n    private router: Router,\n    private route : ActivatedRoute) {\n    this.posts = [];\n   }\n\n  ngOnInit(): void {\n    this.route.paramMap.subscribe(() =>\n    this.blogService.fetchPosts().subscribe(res => {this.posts = res;}));\n  }\n\n  onSelect(post:Post) {\n    this.selectedPost = post;\n    this.blogService.setCurrentDraft(post);\n    this.router.navigate(['edit', post.postid]);\n  }\n\n  newPost(){\n    // create a new post\n    this.blogService.newPost();\n    // refresh current post lists\n    this.blogService.fetchPosts().subscribe(res => {\n      this.posts = res;\n      // get the postid of newly created post\n      this.posts.sort((a,b) => a.postid - b.postid);\n      let id = this.posts[this.posts.length-1].postid;\n      let newpost = this.blogService.getPost(id);\n      // open edit panel\n      this.blogService.setCurrentDraft(newpost);\n      this.router.navigate(['edit', id]);\n    });\n  }\n\n}\n","<div class=\"box\">\n  <div class=\"head\">\n    <h2>All Posts</h2>\n  <button class=\"btn btn-primary new\" (click)=\"newPost()\">New Post</button>\n  </div>\n  <div class=\"post-content\">\n    <ul class=\"posts\">\n      <li *ngFor=\"let post of posts\"\n      (click)=\"onSelect(post)\"\n      [class.selected]=\"post === selectedPost\"\n      [routerLink]=\"['/edit', post.postid]\">\n        <span class=\"badge\">\n          {{post.created.toLocaleDateString()}},\n          {{post.created.toLocaleTimeString()}}\n        </span>\n        {{post.title}}\n      </li>\n    </ul>\n  </div>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { Parser, HtmlRenderer } from 'commonmark';\nimport { Post, BlogService } from '../blog.service';\nimport { HtmlParser } from '@angular/compiler';\nimport { EditComponent } from '../edit/edit.component';\n\n@Component({\n  selector: 'app-preview',\n  templateUrl: './preview.component.html',\n  styleUrls: ['./preview.component.css']\n})\nexport class PreviewComponent implements OnInit {\n  post : Post;\n  title : string;\n  body : string;\n  constructor(\n    private blogService : BlogService,\n    private route : ActivatedRoute,\n    private router : Router\n    ) {\n     }\n\n  ngOnInit(): void {\n    this.route.paramMap.subscribe(() => this.getPost());\n  }\n\n  getPost(): void {\n    const id = +this.route.snapshot.paramMap.get('id');\n    if (this.blogService.getCurrentDraft()) {\n      this.blogService.getCurrentDraft().subscribe(draft => {\n        console.log(draft);\n        if (draft != null) {\n          this.post = draft;\n        }\n      });\n    }\n    if (this.post == null || this.post.postid !== id) {\n      this.post = this.blogService.getPost(id);\n    }\n\n    console.log(this.post.title);\n    // convert to markdown\n    if (this.post) {\n      let writer = new HtmlRenderer();\n      let reader = new Parser();\n      this.title = writer.render(reader.parse(this.post.title));\n      this.body = writer.render(reader.parse(this.post.body));\n    }\n  }\n\n  edit() {\n      this.router.navigate(['/edit', this.post?.postid]);\n  }\n\n}\n","<div class=\"box\">\n  <div class=\"head\">\n    <h2>Markdown Preview</h2>\n    <button class=\"btn btn-success back\" (click)=\"edit()\">Edit</button>\n  </div>\n  <div>\n    <div class=\"mdTitle\" [innerHTML]=\"title\"></div>\n    <div class=\"mdBody\" [innerHTML]=\"body\"></div>\n  </div>\n</div>\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}